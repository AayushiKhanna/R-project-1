getwd()
library(shiny)
library(shinydashboard)
dashboardPage(
dashboardHeader(),
dahsboardsidebar(),
dashboardbodyy()
)
library(shiny)
library(shinydashboard)
dashboardPage(
dashboardHeader(),
dashboardsidebar(),
dashboardbodyy()
)
library(shiny)
library(shinydashboard)
dashboardPage(
dashboardHeader(),
dashboardBody(),
dashboardSidebar()
)
library(shiny)
library(shinydashboard)
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
function(input,output,session){
}
function(input,output,session){
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
runApp('aayushi')
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
getwd()
library(shiny)
library(shinydashboard)
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
function(input,output,session){
}
shinyApp(ui = ui, server = server)
server <- function(input,output,session){
}
server <- function(input,output,session){
}
shinyApp(ui = ui, server = server)
server <- function(input,output,session){
}
shinyApp(server = server)
server <- function(input,output,session){
}
shinyApp(server = server)
runApp('server.r')
runApp('server.r')
runApp('server.r')
runApp('server.r')
function(input,output,session){
}
function(input,output,session){
}
function(input,output,session){
}
source("~/.active-rstudio-document")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dashboardPage(
dashboardHeader(title="Exploring the 1973 US Arrests data with R & Shiny Dashboard", titleWidth = 650,
tags$li(class="dropdown",tags$a(href="https://www.youtube.com/playlist?list=PL6wLL_RojB5xNOhe2OTSd-DPkMLVY9DfB", icon("youtube"), "My Channel", target="_blank")),
tags$li(class="dropdown",tags$a(href="https://www.linkedin.com/in/abhinav-agrawal-pmp%C2%AE-safe%C2%AE-5-agilist-csm%C2%AE-5720309" ,icon("linkedin"), "My Profile", target="_blank")),
tags$li(class="dropdown",tags$a(href="https://github.com/aagarw30/R-Shiny-Dashboards/tree/main/USArrestDashboard", icon("github"), "Source Code", target="_blank"))
),
dashboardSidebar(
sidebarMenu(id = "sidebar",
menuItem("Dataset", tabName = "data", icon = icon("database")),
menuItem("Visualization", tabName = "viz", icon=icon("chart-line")),
# Conditional Panel for conditional widget appearance
# Filter should appear only for the visualization menu and selected tabs within it
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'distro'", selectInput(inputId = "var1" , label ="Select the Variable" , choices = c1)),
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'trends' ", selectInput(inputId = "var2" , label ="Select the Arrest type" , choices = c2)),
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'relation' ", selectInput(inputId = "var3" , label ="Select the X variable" , choices = c1, selected = "Rape")),
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'relation' ", selectInput(inputId = "var4" , label ="Select the Y variable" , choices = c1, selected = "Assault")),
menuItem("Choropleth Map", tabName = "map", icon=icon("map"))
)
),
dashboardBody(
tabItems(
## First tab item
tabItem(tabName = "data",
tabBox(id="t1", width = 12,
tabPanel("About", icon=icon("address-card"),
fluidRow(
column(width = 8, tags$img(src="crime.jpg", width =600 , height = 300),
tags$br() ,
tags$a("Photo by Campbell Jensen on Unsplash"), align = "center"),
column(width = 4, tags$br() ,
tags$p("This data set comes along with base R and contains statistics, in arrests per 100,000 residents for assault, murder, and rape in each of the 50 US states in 1973. Also, given is the percent of the population living in urban areas.")
)
)
),
tabPanel("Data", dataTableOutput("dataT"), icon = icon("table")),
tabPanel("Structure", verbatimTextOutput("structure"), icon=icon("uncharted")),
tabPanel("Summary Stats", verbatimTextOutput("summary"), icon=icon("chart-pie"))
)
),
# Second Tab Item
tabItem(tabName = "viz",
tabBox(id="t2",  width=12,
tabPanel("Crime Trends by State", value="trends",
fluidRow(tags$div(align="center", box(tableOutput("top5"), title = textOutput("head1") , collapsible = TRUE, status = "primary",  collapsed = TRUE, solidHeader = TRUE)),
tags$div(align="center", box(tableOutput("low5"), title = textOutput("head2") , collapsible = TRUE, status = "primary",  collapsed = TRUE, solidHeader = TRUE))
),
withSpinner(plotlyOutput("bar"))
),
tabPanel("Distribution", value="distro",
# selectInput("var", "Select the variable", choices=c("Rape", "Assault")),
withSpinner(plotlyOutput("histplot", height = "350px"))),
tabPanel("Correlation Matrix", id="corr" , withSpinner(plotlyOutput("cor"))),
tabPanel("Relationship among Arrest types & Urban Population",
radioButtons(inputId ="fit" , label = "Select smooth method" , choices = c("loess", "lm"), selected = "lm" , inline = TRUE),
withSpinner(plotlyOutput("scatter")), value="relation"),
side = "left"
),
),
# Third Tab Item
tabItem(
tabName = "map",
box(      selectInput("crimetype","Select Arrest Type", choices = c2, selected="Rape", width = 250),
withSpinner(plotOutput("map_plot")), width = 12)
)
)
)
)
function(input, output, session){
# Data table Output
output$dataT <- renderDataTable(my_data)
# Rendering the box header
output$head1 <- renderText(
paste("5 states with high rate of", input$var2, "Arrests")
)
# Rendering the box header
output$head2 <- renderText(
paste("5 states with low rate of", input$var2, "Arrests")
)
# Rendering table with 5 states with high arrests for specific crime type
output$top5 <- renderTable({
my_data %>%
select(State, input$var2) %>%
arrange(desc(get(input$var2))) %>%
head(5)
})
# Rendering table with 5 states with low arrests for specific crime type
output$low5 <- renderTable({
my_data %>%
select(State, input$var2) %>%
arrange(get(input$var2)) %>%
head(5)
})
# For Structure output
output$structure <- renderPrint({
my_data %>%
str()
})
# For Summary Output
output$summary <- renderPrint({
my_data %>%
summary()
})
# For histogram - distribution charts
output$histplot <- renderPlotly({
p1 = my_data %>%
plot_ly() %>%
add_histogram(x=~get(input$var1)) %>%
layout(xaxis = list(title = paste(input$var1)))
p2 = my_data %>%
plot_ly() %>%
add_boxplot(x=~get(input$var1)) %>%
layout(yaxis = list(showticklabels = F))
# stacking the plots on top of each other
subplot(p2, p1, nrows = 2, shareX = TRUE) %>%
hide_legend() %>%
layout(title = "Distribution chart - Histogram and Boxplot",
yaxis = list(title="Frequency"))
})
### Bar Charts - State wise trend
output$bar <- renderPlotly({
my_data %>%
plot_ly() %>%
add_bars(x=~State, y=~get(input$var2)) %>%
layout(title = paste("Statewise Arrests for", input$var2),
xaxis = list(title = "State"),
yaxis = list(title = paste(input$var2, "Arrests per 100,000 residents") ))
})
### Scatter Charts
output$scatter <- renderPlotly({
p = my_data %>%
ggplot(aes(x=get(input$var3), y=get(input$var4))) +
geom_point() +
geom_smooth(method=get(input$fit)) +
labs(title = paste("Relation b/w", input$var3 , "and" , input$var4),
x = input$var3,
y = input$var4) +
theme(  plot.title = element_textbox_simple(size=10,
halign=0.5))
# applied ggplot to make it interactive
ggplotly(p)
})
## Correlation plot
output$cor <- renderPlotly({
my_df <- my_data %>%
select(-State)
# Compute a correlation matrix
corr <- round(cor(my_df), 1)
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(my_df)
corr.plot <- ggcorrplot(
corr,
hc.order = TRUE,
lab= TRUE,
outline.col = "white",
p.mat = p.mat
)
ggplotly(corr.plot)
})
# Choropleth map
output$map_plot <- renderPlot({
new_join %>%
ggplot(aes(x=long, y=lat,fill=get(input$crimetype) , group = group)) +
geom_polygon(color="black", size=0.4) +
scale_fill_gradient(low="#73A5C6", high="#001B3A", name = paste(input$crimetype, "Arrest rate")) +
theme_void() +
labs(title = paste("Choropleth map of", input$crimetype , " Arrests per 100,000 residents by state in 1973")) +
theme(
plot.title = element_textbox_simple(face="bold",
size=18,
halign=0.5),
legend.position = c(0.2, 0.1),
legend.direction = "horizontal"
) +
geom_text(aes(x=x, y=y, label=abb), size = 4, color="white")
})
}
# Join the state abbreviations and center location to the dataset for each of the observations in the merged dataset
# left_join from dplyr package
# there is no abbreviation available for District of Columbia and hence those rows will be dropped in the outcome
new_join = left_join(merged, st, by=c("State" = "stname"))
new_join = left_join(merged, st, by=c("State" = "stname"))
dashboardPage(
dashboardHeader(title="Exploring the 1973 US Arrests data with R & Shiny Dashboard", titleWidth = 650,
tags$li(class="dropdown",tags$a(href="https://www.youtube.com/playlist?list=PL6wLL_RojB5xNOhe2OTSd-DPkMLVY9DfB", icon("youtube"), "My Channel", target="_blank")),
tags$li(class="dropdown",tags$a(href="https://www.linkedin.com/in/abhinav-agrawal-pmp%C2%AE-safe%C2%AE-5-agilist-csm%C2%AE-5720309" ,icon("linkedin"), "My Profile", target="_blank")),
tags$li(class="dropdown",tags$a(href="https://github.com/aagarw30/R-Shiny-Dashboards/tree/main/USArrestDashboard", icon("github"), "Source Code", target="_blank"))
),
dashboardSidebar(
sidebarMenu(id = "sidebar",
menuItem("Dataset", tabName = "data", icon = icon("database")),
menuItem("Visualization", tabName = "viz", icon=icon("chart-line")),
# Conditional Panel for conditional widget appearance
# Filter should appear only for the visualization menu and selected tabs within it
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'distro'", selectInput(inputId = "var1" , label ="Select the Variable" , choices = c1)),
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'trends' ", selectInput(inputId = "var2" , label ="Select the Arrest type" , choices = c2)),
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'relation' ", selectInput(inputId = "var3" , label ="Select the X variable" , choices = c1, selected = "Rape")),
conditionalPanel("input.sidebar == 'viz' && input.t2 == 'relation' ", selectInput(inputId = "var4" , label ="Select the Y variable" , choices = c1, selected = "Assault")),
menuItem("Choropleth Map", tabName = "map", icon=icon("map"))
)
),
dashboardBody(
tabItems(
## First tab item
tabItem(tabName = "data",
tabBox(id="t1", width = 12,
tabPanel("About", icon=icon("address-card"),
fluidRow(
column(width = 8, tags$img(src="crime.jpg", width =600 , height = 300),
tags$br() ,
tags$a("Photo by Campbell Jensen on Unsplash"), align = "center"),
column(width = 4, tags$br() ,
tags$p("This data set comes along with base R and contains statistics, in arrests per 100,000 residents for assault, murder, and rape in each of the 50 US states in 1973. Also, given is the percent of the population living in urban areas.")
)
)
),
tabPanel("Data", dataTableOutput("dataT"), icon = icon("table")),
tabPanel("Structure", verbatimTextOutput("structure"), icon=icon("uncharted")),
tabPanel("Summary Stats", verbatimTextOutput("summary"), icon=icon("chart-pie"))
)
),
# Second Tab Item
tabItem(tabName = "viz",
tabBox(id="t2",  width=12,
tabPanel("Crime Trends by State", value="trends",
fluidRow(tags$div(align="center", box(tableOutput("top5"), title = textOutput("head1") , collapsible = TRUE, status = "primary",  collapsed = TRUE, solidHeader = TRUE)),
tags$div(align="center", box(tableOutput("low5"), title = textOutput("head2") , collapsible = TRUE, status = "primary",  collapsed = TRUE, solidHeader = TRUE))
),
withSpinner(plotlyOutput("bar"))
),
tabPanel("Distribution", value="distro",
# selectInput("var", "Select the variable", choices=c("Rape", "Assault")),
withSpinner(plotlyOutput("histplot", height = "350px"))),
tabPanel("Correlation Matrix", id="corr" , withSpinner(plotlyOutput("cor"))),
tabPanel("Relationship among Arrest types & Urban Population",
radioButtons(inputId ="fit" , label = "Select smooth method" , choices = c("loess", "lm"), selected = "lm" , inline = TRUE),
withSpinner(plotlyOutput("scatter")), value="relation"),
side = "left"
),
),
# Third Tab Item
tabItem(
tabName = "map",
box(      selectInput("crimetype","Select Arrest Type", choices = c2, selected="Rape", width = 250),
withSpinner(plotOutput("map_plot")), width = 12)
)
)
)
)
shiny::runApp()
packages = c('car', 'stat')
install.packages(packages, dependencies = TRUE) # Install Packages
packages = c('car','stats')
install.packages(packages, dependencies = TRUE) # Install Packages
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
